{"ast":null,"code":"import _objectSpread from\"C:/Users/user/Documents/GitHub/BrightBuy-Frontend/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\r\n * CartContext - Global state management for shopping cart\r\n * Provides cart state and actions throughout the application using React Context API\r\n */import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();/**\r\n * Custom hook to use cart context\r\n */export const useCart=()=>{const context=useContext(CartContext);if(!context){throw new Error('useCart must be used within a CartProvider');}return context;};/**\r\n * CartProvider Component\r\n * Wraps the app and provides cart functionality\r\n */export const CartProvider=_ref=>{let{children}=_ref;const[cartItems,setCartItems]=useState([]);const[wishlistItems,setWishlistItems]=useState([]);// Load cart from localStorage on mount\nuseEffect(()=>{const savedCart=localStorage.getItem('cart');const savedWishlist=localStorage.getItem('wishlist');if(savedCart){setCartItems(JSON.parse(savedCart));}if(savedWishlist){setWishlistItems(JSON.parse(savedWishlist));}},[]);// Save cart to localStorage whenever it changes\nuseEffect(()=>{localStorage.setItem('cart',JSON.stringify(cartItems));},[cartItems]);useEffect(()=>{localStorage.setItem('wishlist',JSON.stringify(wishlistItems));},[wishlistItems]);/**\r\n   * Add item to cart\r\n   */const addToCart=function(product){let quantity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;setCartItems(prevItems=>{const existingItem=prevItems.find(item=>item.id===product.id);if(existingItem){return prevItems.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+quantity}):item);}return[...prevItems,_objectSpread(_objectSpread({},product),{},{quantity})];});};/**\r\n   * Remove item from cart\r\n   */const removeFromCart=productId=>{setCartItems(prevItems=>prevItems.filter(item=>item.id!==productId));};/**\r\n   * Update item quantity in cart\r\n   */const updateQuantity=(productId,quantity)=>{if(quantity<=0){removeFromCart(productId);return;}setCartItems(prevItems=>prevItems.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{quantity}):item));};/**\r\n   * Clear entire cart\r\n   */const clearCart=()=>{setCartItems([]);};/**\r\n   * Add item to wishlist\r\n   */const addToWishlist=product=>{setWishlistItems(prevItems=>{const exists=prevItems.find(item=>item.id===product.id);if(exists){return prevItems;}return[...prevItems,product];});};/**\r\n   * Remove item from wishlist\r\n   */const removeFromWishlist=productId=>{setWishlistItems(prevItems=>prevItems.filter(item=>item.id!==productId));};/**\r\n   * Calculate cart total\r\n   */const getCartTotal=()=>{return cartItems.reduce((total,item)=>total+item.price*item.quantity,0);};/**\r\n   * Get cart items count\r\n   */const getCartItemsCount=()=>{return cartItems.reduce((count,item)=>count+item.quantity,0);};const value={cartItems,wishlistItems,addToCart,removeFromCart,updateQuantity,clearCart,addToWishlist,removeFromWishlist,getCartTotal,getCartItemsCount};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","CartContext","useCart","context","Error","CartProvider","_ref","children","cartItems","setCartItems","wishlistItems","setWishlistItems","savedCart","localStorage","getItem","savedWishlist","JSON","parse","setItem","stringify","addToCart","product","quantity","arguments","length","undefined","prevItems","existingItem","find","item","id","map","_objectSpread","removeFromCart","productId","filter","updateQuantity","clearCart","addToWishlist","exists","removeFromWishlist","getCartTotal","reduce","total","price","getCartItemsCount","count","value","Provider"],"sources":["C:/Users/user/Documents/GitHub/BrightBuy-Frontend/frontend/src/context/CartContext.jsx"],"sourcesContent":["/**\r\n * CartContext - Global state management for shopping cart\r\n * Provides cart state and actions throughout the application using React Context API\r\n */\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\n/**\r\n * Custom hook to use cart context\r\n */\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * CartProvider Component\r\n * Wraps the app and provides cart functionality\r\n */\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [wishlistItems, setWishlistItems] = useState([]);\r\n\r\n  // Load cart from localStorage on mount\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    const savedWishlist = localStorage.getItem('wishlist');\r\n    \r\n    if (savedCart) {\r\n      setCartItems(JSON.parse(savedCart));\r\n    }\r\n    if (savedWishlist) {\r\n      setWishlistItems(JSON.parse(savedWishlist));\r\n    }\r\n  }, []);\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('wishlist', JSON.stringify(wishlistItems));\r\n  }, [wishlistItems]);\r\n\r\n  /**\r\n   * Add item to cart\r\n   */\r\n  const addToCart = (product, quantity = 1) => {\r\n    setCartItems(prevItems => {\r\n      const existingItem = prevItems.find(item => item.id === product.id);\r\n      \r\n      if (existingItem) {\r\n        return prevItems.map(item =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + quantity }\r\n            : item\r\n        );\r\n      }\r\n      \r\n      return [...prevItems, { ...product, quantity }];\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Remove item from cart\r\n   */\r\n  const removeFromCart = (productId) => {\r\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n  };\r\n\r\n  /**\r\n   * Update item quantity in cart\r\n   */\r\n  const updateQuantity = (productId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n    \r\n    setCartItems(prevItems =>\r\n      prevItems.map(item =>\r\n        item.id === productId ? { ...item, quantity } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Clear entire cart\r\n   */\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  /**\r\n   * Add item to wishlist\r\n   */\r\n  const addToWishlist = (product) => {\r\n    setWishlistItems(prevItems => {\r\n      const exists = prevItems.find(item => item.id === product.id);\r\n      if (exists) {\r\n        return prevItems;\r\n      }\r\n      return [...prevItems, product];\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Remove item from wishlist\r\n   */\r\n  const removeFromWishlist = (productId) => {\r\n    setWishlistItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n  };\r\n\r\n  /**\r\n   * Calculate cart total\r\n   */\r\n  const getCartTotal = () => {\r\n    return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n  };\r\n\r\n  /**\r\n   * Get cart items count\r\n   */\r\n  const getCartItemsCount = () => {\r\n    return cartItems.reduce((count, item) => count + item.quantity, 0);\r\n  };\r\n\r\n  const value = {\r\n    cartItems,\r\n    wishlistItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    addToWishlist,\r\n    removeFromWishlist,\r\n    getCartTotal,\r\n    getCartItemsCount\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}